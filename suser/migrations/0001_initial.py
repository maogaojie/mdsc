# Generated by Django 2.1.4 on 2019-09-09 19:41

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import suser.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=11)),
                ('email', models.CharField(max_length=50)),
                ('image', models.CharField(default='', max_length=255)),
                ('signator', models.CharField(default='', max_length=255)),
                ('is_valide', models.IntegerField(default=0)),
                ('token', models.CharField(default='', max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            bases=(suser.models.Base, models.Model),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Aaa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('is_admin', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'aaa',
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('is_show', models.IntegerField(default=0)),
                ('sort', models.IntegerField(default=1)),
                ('type', models.IntegerField(default=1)),
            ],
            options={
                'db_table': 'banner',
            },
            bases=(suser.models.Base, models.Model),
        ),
        migrations.CreateModel(
            name='Cate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('pid', models.IntegerField(default=0)),
                ('type', models.IntegerField(default=1)),
                ('top_id', models.IntegerField(default=0)),
                ('is_recommend', models.IntegerField(default=0)),
                ('pic', models.CharField(default='', max_length=255)),
            ],
            options={
                'db_table': 'cate',
            },
            bases=(suser.models.Base, models.Model),
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.IntegerField()),
                ('cityname', models.CharField(max_length=50)),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'city',
            },
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('store', models.IntegerField(default=0)),
                ('lock_store', models.IntegerField(default=0)),
                ('pic', models.CharField(max_length=100)),
                ('is_recommend', models.IntegerField(default=0)),
                ('content', models.TextField()),
                ('t_comment', models.IntegerField(default=0)),
                ('top_id', models.IntegerField(default=0)),
                ('sales', models.IntegerField(default=0)),
                ('cid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suser.Cate')),
            ],
            options={
                'db_table': 'goods',
            },
            bases=(suser.models.Base, models.Model),
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('content', models.TextField()),
                ('is_recommend', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'news',
            },
            bases=(suser.models.Base, models.Model),
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'resource',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('status', models.IntegerField()),
                ('resource_role', models.ManyToManyField(blank=True, related_name='role_resource', to='suser.Resource')),
            ],
            options={
                'db_table': 'role',
            },
        ),
        migrations.CreateModel(
            name='Sadmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=128, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('is_admin', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'sadmin',
            },
            bases=(suser.models.Base, models.Model),
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('is_recommend', models.IntegerField(default=0)),
                ('cid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suser.Cate')),
            ],
            options={
                'db_table': 'tags',
            },
            bases=(suser.models.Base, models.Model),
        ),
        migrations.AddField(
            model_name='goods',
            name='tagid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suser.Tags'),
        ),
        migrations.AddField(
            model_name='aaa',
            name='aa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suser.Role'),
        ),
    ]
